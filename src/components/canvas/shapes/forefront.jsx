/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'

export const Forefront = (props) => {
  const { nodes } = useGLTF('/models/shape-02.glb')
  const both = useRef()
  const ring1 = useRef()
  const ring2 = useRef()
  const ring3 = useRef()
  const ring4 = useRef()
  const ring5 = useRef()
  const ring6 = useRef()
  const ring7 = useRef()
  const ring8 = useRef()
  useFrame((state, delta) => {
    const t = state.clock.getElapsedTime() * 0.75
    const s1 = Math.sin(t)
    const s2 = Math.sin(t + Math.PI * 0.25)
    const s3 = Math.sin(t + Math.PI * 0.5)
    const s4 = Math.sin(t + Math.PI * 0.75)
    const s5 = Math.sin(t + Math.PI)
    const s6 = Math.sin(t + Math.PI * 1.25)
    const s7 = Math.sin(t + Math.PI * 1.5)
    const s8 = Math.sin(t + Math.PI * 1.75)
    const c1 = Math.cos(t)
    const c2 = Math.cos(t + Math.PI * 0.25)
    const c3 = Math.cos(t + Math.PI * 0.5)
    const c4 = Math.cos(t + Math.PI * 0.75)
    const c5 = Math.cos(t + Math.PI)
    const c6 = Math.cos(t + Math.PI * 1.25)
    const c7 = Math.cos(t + Math.PI * 1.5)
    const c8 = Math.cos(t + Math.PI * 1.75)
    //ring1
    ring1.current.position.y = s1 * 0.2
    ring1.current.scale.x = 1 + c1 * 0.5
    ring1.current.scale.y = 1.25 + c1 * 0.25
    ring1.current.scale.z = 1 + c1 * 0.5
    //ring2
    ring2.current.position.y = s2 * 0.2
    ring2.current.scale.x = 1 + c2 * 0.5
    ring2.current.scale.y = 1.25 + c2 * 0.25
    ring2.current.scale.z = 1 + c2 * 0.5
    //ring3
    ring3.current.position.y = s3 * 0.2
    ring3.current.scale.x = 1 + c3 * 0.5
    ring3.current.scale.y = 1.25 + c3 * 0.25
    ring3.current.scale.z = 1 + c3 * 0.5
    //ring4
    ring4.current.position.y = s4 * 0.2
    ring4.current.scale.x = 1 + c4 * 0.5
    ring4.current.scale.y = 1.25 + c4 * 0.25
    ring4.current.scale.z = 1 + c4 * 0.5
    //ring5
    ring5.current.position.y = s5 * 0.2
    ring5.current.scale.x = 1 + c5 * 0.5
    ring5.current.scale.y = 1.25 + c5 * 0.25
    ring5.current.scale.z = 1 + c5 * 0.5
    //ring6
    ring6.current.position.y = s6 * 0.2
    ring6.current.scale.x = 1 + c6 * 0.5
    ring6.current.scale.y = 1.25 + c6 * 0.25
    ring6.current.scale.z = 1 + c6 * 0.5
    //ring7
    ring7.current.position.y = s7 * 0.2
    ring7.current.scale.x = 1 + c7 * 0.5
    ring7.current.scale.y = 1.25 + c7 * 0.25
    ring7.current.scale.z = 1 + c7 * 0.5
    //ring8
    ring8.current.position.y = s8 * 0.2
    ring8.current.scale.x = 1 + c8 * 0.5
    ring8.current.scale.y = 1.25 + c8 * 0.25
    ring8.current.scale.z = 1 + c8 * 0.5
  })
  return (
    <group {...props} dispose={null} scale={2.5} rotation={[0, 0, Math.PI * 0.5]} ref={both}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cylinder.geometry}
        rotation={[0, 0, 0]}
        ref={ring1}
      >
        <meshStandardMaterial color='red' />
      </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cylinder001.geometry}
        position={[0, 0, 0]}
        rotation={[0, 0, 0]}
        ref={ring2}
      >
        <meshStandardMaterial color='blue' />
      </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cylinder001.geometry}
        position={[0, 0, 0]}
        rotation={[0, 0, 0]}
        ref={ring3}
      >
        <meshStandardMaterial color='green' />
      </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cylinder001.geometry}
        position={[0, 0, 0]}
        rotation={[0, 0, 0]}
        ref={ring4}
      >
        <meshStandardMaterial color='black' />
      </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cylinder.geometry}
        rotation={[0, 0, 0]}
        ref={ring5}
      >
        <meshStandardMaterial color='red' />
      </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cylinder001.geometry}
        position={[0, 0, 0]}
        rotation={[0, 0, 0]}
        ref={ring6}
      >
        <meshStandardMaterial color='blue' />
      </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cylinder001.geometry}
        position={[0, 0, 0]}
        rotation={[0, 0, 0]}
        ref={ring7}
      >
        <meshStandardMaterial color='green' />
      </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cylinder001.geometry}
        position={[0, 0, 0]}
        rotation={[0, 0, 0]}
        ref={ring8}
      >
        <meshStandardMaterial color='black' />
      </mesh>
    </group>
  )
}

useGLTF.preload('/models/shape-02.glb')
