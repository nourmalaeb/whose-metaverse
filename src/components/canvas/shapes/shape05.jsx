/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { useFrame } from '@react-three/fiber'

export const Shape05 = (props) => {
  const all = useRef()
  const cube = useRef()
  const cone = useRef()
  const ball = useRef()
  useFrame((state, delta) => {
    all.current.rotation.y += 0.5 * delta
    cube.current.rotation.y += 0.5 * delta
    cone.current.rotation.y += 0.5 * delta
    ball.current.rotation.y += 0.5 * delta
  })
  return (
    <group {...props} dispose={null} scale={0.7} ref={all}>
      <mesh
        castShadow
        receiveShadow
        ref={cube}
        position={[Math.sin((Math.PI * 2) / 3), 0, Math.cos((Math.PI * 2) / 3)]}
      >
        <boxGeometry />
        <meshNormalMaterial flatShading />
      </mesh>
      <mesh
        castShadow
        receiveShadow
        ref={cone}
        position={[Math.sin((Math.PI * 4) / 3), 0, Math.cos((Math.PI * 4) / 3)]}
      >
        <coneGeometry args={[0.625, 1, 4]} />
        <meshNormalMaterial flatShading />
      </mesh>
      <mesh
        castShadow
        receiveShadow
        ref={ball}
        position={[Math.sin(Math.PI * 2), 0, Math.cos(Math.PI * 2)]}
      >
        <icosahedronGeometry args={[0.625, 1]} />
        <meshNormalMaterial flatShading />
      </mesh>
    </group>
  )
}
